{
  "questions": [
    {
      "text": "<p>چرا <code dir=\"lt\">React</code> از رویکرد \"اعلانی\" (<code dir=\"lt\">Declarative</code>) برای ساخت رابط کاربری استفاده می‌کند؟</p>",
      "difficulty": 1,
      "explanation": "<p>چرا گزینه <code dir=\"lt\">2</code> صحیح است؟ <code dir=\"lt\">React</code> از رویکرد اعلانی استفاده می‌کند چون کار با <code dir=\"lt\">DOM</code> دستی را حذف می‌کند و باعث کاهش خطاهای کدنویسی می‌شود.</p>",
      "tags": [
        "react.basics"
      ],
      "answers": [
        {
          "text": "<p>چون برای نمایش اطلاعات باید مرحله به مرحله به <code dir=\"lt\">React</code> بگوییم که دقیقا چه تغییراتی را در <code dir=\"lt\">DOM</code> ایجاد کند.</p>",
          "isCorrect": false
        },
        {
          "text": "<p>چون کار با <code dir=\"lt\">DOM</code> دستی را حذف می‌کند و باعث کاهش خطاهای کدنویسی می‌شود.</p>",
          "isCorrect": true
        },
        {
          "text": "<p>چون نیازی به دستکاری مستقیم <code dir=\"lt\">state</code> ندارد.</p>",
          "isCorrect": false
        },
        {
          "text": "<p>چون فقط به تغییرات <code dir=\"lt\">UI</code> توجه می‌کند و از نمایش اطلاعات جلوگیری می‌کند.</p>",
          "isCorrect": false
        }
      ]
    },
    {
      "text": "<p>در مثال کد <code dir=\"lt\">LikeButton</code>، چه زمانی متن '<code dir=\"lt\">You</code> <code dir=\"lt\">liked</code> <code dir=\"lt\">this</code>' به نمایش در می‌آید؟</p>",
      "difficulty": 2,
      "explanation": "<p>چرا گزینه <code dir=\"lt\">2</code> صحیح است؟ متن '<code dir=\"lt\">You</code> <code dir=\"lt\">liked</code> <code dir=\"lt\">this</code>' زمانی به نمایش در می‌آید که دکمه کلیک می‌شود و وضعیت <code dir=\"lt\">liked</code> به <code dir=\"lt\">true</code> تغییر می‌کند.</p>",
      "tags": [
        "react.basics"
      ],
      "answers": [
        {
          "text": "<p>زمانی که وضعیت <code dir=\"lt\">liked</code> به صورت پیش‌فرض <code dir=\"lt\">false</code> باشد.</p>",
          "isCorrect": false
        },
        {
          "text": "<p>زمانی که کاربر هیچ اقدامی انجام ندهد.</p>",
          "isCorrect": false
        },
        {
          "text": "<p>زمانی که دکمه کلیک می‌شود و وضعیت <code dir=\"lt\">liked</code> به <code dir=\"lt\">true</code> تغییر می‌کند.</p>",
          "isCorrect": true
        },
        {
          "text": "<p>زمانی که <code dir=\"lt\">state</code> به <code dir=\"lt\">null</code> تغییر کند.</p>",
          "isCorrect": false
        }
      ]
    },
    {
      "text": "<p>چه مزیتی در استفاده از معماری مبتنی بر کامپوننت در <code dir=\"lt\">React</code> وجود دارد؟</p>",
      "difficulty": 2,
      "explanation": "<p>چرا گزینه <code dir=\"lt\">2</code> صحیح است؟ استفاده از معماری کامپوننت باعث می‌شود که برنامه ساده‌تر و نگهداری آن راحت‌تر شود. همچنین تست‌پذیری را افزایش می‌دهد.</p>",
      "tags": [
        "react.basics"
      ],
      "answers": [
        {
          "text": "<p>باعث افزایش حجم کد می‌شود و از سرعت اجرا می‌کاهد.</p>",
          "isCorrect": false
        },
        {
          "text": "<p>ساختار پیچیده برنامه را ساده‌تر می‌کند و مدیریت آن راحت‌تر می‌شود.</p>",
          "isCorrect": true
        },
        {
          "text": "<p>نگهداری و تست برنامه را بسیار پیچیده می‌کند.</p>",
          "isCorrect": false
        },
        {
          "text": "<p>تنها در صورت داشتن تیم بزرگ توسعه‌دهنده موثر است.</p>",
          "isCorrect": false
        }
      ]
    },
    {
      "text": "<p>چه تفاوتی بین دستور <code dir=\"lt\">const [liked, setLiked] = React.useState(false)</code> و <code dir=\"lt\">const liked = false</code> در <code dir=\"lt\">React</code> وجود دارد؟</p>",
      "difficulty": 3,
      "explanation": "<p>چرا گزینه <code dir=\"lt\">3</code> صحیح است؟ <code dir=\"lt\">useState</code> یک متغیر محلی است که به <code dir=\"lt\">React</code> اجازه می‌دهد <code dir=\"lt\">state</code> را کنترل کند و آن را در <code dir=\"lt\">UI</code> نمایش دهد.</p>",
      "tags": [
        "react.basics"
      ],
      "answers": [
        {
          "text": "<p><code dir=\"lt\">useState</code> فقط برای ذخیره متغیرهای موقتی در نظر گرفته شده است.</p>",
          "isCorrect": false
        },
        {
          "text": "<p><code dir=\"lt\">useState</code> کارایی کد را کاهش می‌دهد و باعث کندی <code dir=\"lt\">React</code> می‌شود.</p>",
          "isCorrect": false
        },
        {
          "text": "<p><code dir=\"lt\">useState</code> یک متغیر محلی است که به <code dir=\"lt\">React</code> اجازه می‌دهد <code dir=\"lt\">state</code> را کنترل کند و آن را در <code dir=\"lt\">UI</code> نمایش دهد.</p>",
          "isCorrect": true
        },
        {
          "text": "<p><code dir=\"lt\">useState</code> فقط در زمان ساختن کامپوننت‌های پیچیده کاربرد دارد.</p>",
          "isCorrect": false
        }
      ]
    },
    {
      "text": "<p>چرا در <code dir=\"lt\">React</code> از کامپوننت‌ها برای ساخت رابط‌های کاربری استفاده می‌شود؟</p>",
      "difficulty": 2,
      "explanation": "<p>چرا گزینه <code dir=\"lt\">2</code> صحیح است؟ کامپوننت‌ها باعث می‌شوند که <code dir=\"lt\">UI</code> قابل استفاده مجدد، نگهداری آسان‌تر و تست‌پذیرتر باشد.</p>",
      "tags": [
        "react.basics"
      ],
      "answers": [
        {
          "text": "<p>چون کد را پیچیده‌تر و مدیریت آن را سخت‌تر می‌کند.</p>",
          "isCorrect": false
        },
        {
          "text": "<p>چون کامپوننت‌ها باعث می‌شوند که <code dir=\"lt\">UI</code> قابل استفاده مجدد، نگهداری آسان‌تر و تست‌پذیرتر باشد.</p>",
          "isCorrect": true
        },
        {
          "text": "<p>باعث افزایش حجم کد می‌شود و از سرعت اجرا می‌کاهد.</p>",
          "isCorrect": false
        },
        {
          "text": "<p>چون تنها یک بار می‌توان از هر کامپوننت استفاده کرد.</p>",
          "isCorrect": false
        }
      ]
    }
  ]
}
