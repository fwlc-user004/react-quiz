{
  "questions": [
    {
      "text": "<p><code dir=\"ltr\">Virtual</code> <code dir=\"ltr\">DOM</code> در <code dir=\"ltr\">React</code> چیست و چرا به آن نیاز داریم؟</p>",
      "difficulty": 1,
      "explanation": "<p>پاسخ صحیح گزینه <code dir=\"ltr\">B</code> است، چون <code dir=\"ltr\">Virtual DOM</code> یک کپی سبک از <code dir=\"ltr\">DOM</code> واقعی است که در حافظه نگهداری می‌شود و به روز رسانی‌های بهینه‌تری را امکان‌پذیر می‌کند.</p>",
      "tags": [
        "react.virtual-dom"
      ],
      "answers": [
        {
          "text": "<p>یک نسخه کامل از <code dir=\"ltr\">DOM</code> واقعی که به صورت جداگانه اعمال می‌شود</p>",
          "isCorrect": false
        },
        {
          "text": "<p>یک نمایش مجازی از <code dir=\"ltr\">DOM</code> که در حافظه نگهداری می‌شود</p>",
          "isCorrect": true
        },
        {
          "text": "<p>یک ابزار برای کنترل انیمیشن‌های رابط کاربری</p>",
          "isCorrect": false
        },
        {
          "text": "<p>یک سیستم مدیریت <code dir=\"ltr\">state</code> داخلی برای <code dir=\"ltr\">React</code></p>",
          "isCorrect": false
        }
      ]
    },
    {
      "text": "<p>چه فرآیندی در <code dir=\"ltr\">React</code> برای به‌روزرسانی <code dir=\"ltr\">DOM</code> واقعی استفاده می‌شود؟</p>",
      "difficulty": 2,
      "explanation": "<p>پاسخ صحیح گزینه <code dir=\"ltr\">B</code> است، چون <code dir=\"ltr\">React</code> از الگوریتم <code dir=\"ltr\">Diffing</code> برای مقایسه درخت جدید <code dir=\"ltr\">Virtual DOM</code> با نسخه قبلی و اعمال تغییرات به صورت دسته‌ای استفاده می‌کند.</p>",
      "tags": [
        "react.virtual-dom"
      ],
      "answers": [
        {
          "text": "<p>استفاده از <code dir=\"ltr\">useEffect</code> برای هر تغییر <code dir=\"ltr\">state</code></p>",
          "isCorrect": false
        },
        {
          "text": "<p>به‌روزرسانی <code dir=\"ltr\">DOM</code> به صورت تک به تک</p>",
          "isCorrect": false
        },
        {
          "text": "<p>استفاده از الگوریتم <code dir=\"ltr\">Diffing</code> برای مقایسه و به‌روزرسانی دسته‌ای</p>",
          "isCorrect": true
        },
        {
          "text": "<p>استفاده از <code dir=\"ltr\">Virtual</code> <code dir=\"ltr\">DOM</code> برای مدیریت <code dir=\"ltr\">state</code></p>",
          "isCorrect": false
        }
      ]
    },
    {
      "text": "<p>کامپوننت‌های <code dir=\"ltr\">React</code> چیستند و چه ویژگی‌هایی دارند؟</p>",
      "difficulty": 2,
      "explanation": "<p>پاسخ صحیح گزینه <code dir=\"ltr\">A</code> است، چون کامپوننت‌ها بلوک‌های سازنده اصلی در <code dir=\"ltr\">React</code> هستند که می‌توانند مستقل و قابل استفاده مجدد باشند.</p>",
      "tags": [
        "react.virtual-dom"
      ],
      "answers": [
        {
          "text": "<p>بلوک‌های سازنده اصلی که مستقل و قابل استفاده مجدد هستند</p>",
          "isCorrect": true
        },
        {
          "text": "<p>داده‌هایی که از کامپوننت والد به فرزند منتقل می‌شوند</p>",
          "isCorrect": false
        },
        {
          "text": "<p>توابعی برای اعمال تغییرات مستقیم بر روی <code dir=\"ltr\">DOM</code></p>",
          "isCorrect": false
        },
        {
          "text": "<p>فریم ورک‌هایی برای مدیریت وضعیت <code dir=\"ltr\">state</code></p>",
          "isCorrect": false
        }
      ]
    },
    {
      "text": "<p>چه تفاوتی میان پراپ‌ها (<code dir=\"ltr\">props</code>) و وضعیت (<code dir=\"ltr\">state</code>) در <code dir=\"ltr\">React</code> وجود دارد؟</p>",
      "difficulty": 3,
      "explanation": "<p>پاسخ صحیح گزینه <code dir=\"ltr\">D</code> است، چون <code dir=\"ltr\">props</code> داده‌هایی هستند که از کامپوننت والد به فرزند ارسال می‌شوند و تغییرناپذیرند، در حالی که <code dir=\"ltr\">state</code> داده‌هایی هستند که در داخل کامپوننت مدیریت می‌شوند و می‌توانند تغییر کنند.</p>",
      "tags": [
        "react.virtual-dom"
      ],
      "answers": [
        {
          "text": "<p>هر دو به یک شکل داده‌ها را مدیریت می‌کنند</p>",
          "isCorrect": false
        },
        {
          "text": "<p><code dir=\"ltr\">State</code> داده‌هایی است که از کامپوننت والد به فرزند ارسال می‌شود</p>",
          "isCorrect": false
        },
        {
          "text": "<p><code dir=\"ltr\">Props</code> تغییرناپذیرند، در حالی که <code dir=\"ltr\">state</code> داده‌هایی هستند که در کامپوننت مدیریت می‌شوند</p>",
          "isCorrect": false
        },
        {
          "text": "<p><code dir=\"ltr\">Props</code> داده‌هایی هستند که از کامپوننت والد به فرزند منتقل می‌شوند و تغییرناپذیرند، در حالی که <code dir=\"ltr\">state</code> داده‌هایی هستند که در داخل کامپوننت مدیریت می‌شوند و می‌توانند تغییر کنند</p>",
          "isCorrect": true
        }
      ]
    },
    {
      "text": "<p>چه زمانی در <code dir=\"ltr\">React</code> باید از <code dir=\"ltr\">useState</code> برای مدیریت وضعیت (<code dir=\"ltr\">state</code>) استفاده کنیم؟</p>",
      "difficulty": 2,
      "explanation": "<p>پاسخ صحیح گزینه <code dir=\"ltr\">C</code> است، چون <code dir=\"ltr\">useState</code> برای مدیریت وضعیت در کامپوننت‌های تابعی استفاده می‌شود.</p>",
      "tags": [
        "react.virtual-dom"
      ],
      "answers": [
        {
          "text": "<p>برای مدیریت وضعیت در کامپوننت‌های کلاسی</p>",
          "isCorrect": false
        },
        {
          "text": "<p>برای ایجاد کامپوننت‌های قابل استفاده مجدد</p>",
          "isCorrect": false
        },
        {
          "text": "<p>برای مدیریت وضعیت در کامپوننت‌های تابعی</p>",
          "isCorrect": true
        },
        {
          "text": "<p>برای ارسال داده‌ها از والد به فرزند</p>",
          "isCorrect": false
        }
      ]
    }
  ]
}
