{
  "questions": [
    {
      "text": "<p>برای ساخت یک منوی چندسطحی در <code dir=\"ltr\">React</code> که هر آیتم می‌تواند زیرمنو داشته باشد، چه نوع داده‌ای مناسب است؟\n\nمثال:</p>\n<pre><code dir=\"ltr\">const menuItems = [\n  { title: 'Home', url: '/' },\n  { title: 'Services', url: '/services', submenu: [\n      { title: 'Web', url: '/services/web' },\n      { title: 'SEO', url: '/services/seo' }\n    ]\n  },\n  { title: 'About', url: '/about' }\n];</code></pre>",
      "difficulty": 1,
      "explanation": "<p>چرا گزینه <code dir=\"ltr\">B</code> صحیح است؟ زیرا هر آیتم منو یک شیء است و استفاده از آرایه‌ای از اشیاء اجازه می‌دهد منوهای چندسطحی به راحتی مدیریت شوند.</p>",
      "tags": [
        "react.components.menu"
      ],
      "answers": [
        {
          "text": "<p>آرایه‌ای از رشته‌ها</p>",
          "isCorrect": false
        },
        {
          "text": "<p>آرایه‌ای از اشیاء</p>",
          "isCorrect": true
        },
        {
          "text": "<p>شیء ساده با کلید و مقدار</p>",
          "isCorrect": false
        },
        {
          "text": "<p><code dir=\"ltr\">Set</code></p>",
          "isCorrect": false
        }
      ]
    },
    {
      "text": "<p>کامپوننت <code dir=\"ltr\">MenuItems</code> در مثال زیر چه کاری انجام می‌دهد؟</p>\n<pre><code dir=\"ltr\">const MenuItems = ({ items }) => {\n  return (\n    <li>\n      <a href={items.url}>{items.title}</a>\n    </li>\n  );\n};</code></pre>",
      "difficulty": 2,
      "explanation": "<p>چرا گزینه <code dir=\"ltr\">A</code> صحیح است؟ این کامپوننت یک آیتم منفرد از منو را دریافت کرده و آن را به صورت یک <li> با لینک مربوطه رندر می‌کند.</p>",
      "tags": [
        "react.components.menu"
      ],
      "answers": [
        {
          "text": "<p>یک آیتم منفرد منو را رندر می‌کند</p>",
          "isCorrect": true
        },
        {
          "text": "<p>تمام آیتم‌های منو را رندر می‌کند</p>",
          "isCorrect": false
        },
        {
          "text": "<p>زیرمنوها را باز و بسته می‌کند</p>",
          "isCorrect": false
        },
        {
          "text": "<p>هیچ کاری انجام نمی‌دهد</p>",
          "isCorrect": false
        }
      ]
    },
    {
      "text": "<p>در کامپوننت <code dir=\"ltr\">Navbar</code> زیر، چرا از <code dir=\"ltr\">key</code> در <code dir=\"ltr\">map</code> استفاده شده است؟</p>\n<pre><code dir=\"ltr\">const Navbar = () => {\n  return (\n    <nav>\n      <ul className=\"menus\">\n        {menuItems.map((menu, index) => (\n          <MenuItems items={menu} key={index} />\n        ))}\n      </ul>\n    </nav>\n  );\n};</code></pre>",
      "difficulty": 2,
      "explanation": "<p>چرا گزینه <code dir=\"ltr\">C</code> صحیح است؟ استفاده از <code dir=\"ltr\">key</code> به <code dir=\"ltr\">React</code> کمک می‌کند تا تغییرات لیست را ردیابی کرده و رندر مؤثر انجام دهد و از هشدارهای مرتبط با عناصر تکراری جلوگیری شود.</p>",
      "tags": [
        "react.components.menu"
      ],
      "answers": [
        {
          "text": "<p>برای استایل‌دهی آیتم‌ها</p>",
          "isCorrect": false
        },
        {
          "text": "<p>برای اتصال <code dir=\"ltr\">Event</code> <code dir=\"ltr\">Handler</code></p>",
          "isCorrect": false
        },
        {
          "text": "<p>برای کمک به <code dir=\"ltr\">React</code> در رندر مؤثر لیست‌ها</p>",
          "isCorrect": true
        },
        {
          "text": "<p>برای اضافه کردن زیرمنو به آیتم‌ها</p>",
          "isCorrect": false
        }
      ]
    },
    {
      "text": "<p>در منوی چندسطحی، اگر بخواهیم زیرمنوها با کلیک کاربر نمایش داده شوند، کدام هوک <code dir=\"ltr\">React</code> مناسب است؟</p>",
      "difficulty": 2,
      "explanation": "<p>چرا گزینه <code dir=\"ltr\">B</code> صحیح است؟ <code dir=\"ltr\">useState</code> به ما اجازه می‌دهد که وضعیت باز یا بسته بودن هر زیرمنو را نگه داریم و با تغییر آن، رندر مجدد برای نمایش یا مخفی کردن زیرمنو انجام شود.</p>",
      "tags": [
        "react.components.menu"
      ],
      "answers": [
        {
          "text": "<p><code dir=\"ltr\">useEffect</code></p>",
          "isCorrect": false
        },
        {
          "text": "<p><code dir=\"ltr\">useState</code></p>",
          "isCorrect": true
        },
        {
          "text": "<p><code dir=\"ltr\">useContext</code></p>",
          "isCorrect": false
        },
        {
          "text": "<p><code dir=\"ltr\">useReducer</code></p>",
          "isCorrect": false
        }
      ]
    },
    {
      "text": "<p>چه مزیتی در استفاده از کامپوننت <code dir=\"ltr\">MenuItems</code> برای هر آیتم منو وجود دارد؟\n\nفرض کنید می‌خواهیم منوهای سطح بالا و زیرمنوها را به صورت جداگانه مدیریت کنیم.</p>",
      "difficulty": 3,
      "explanation": "<p>چرا گزینه <code dir=\"ltr\">D</code> صحیح است؟ ایجاد کامپوننت مجزا باعث می‌شود منطق رندر هر آیتم جدا شود، کد تمیزتر شود و رندر تودرتو و مدیریت زیرمنوها ساده‌تر گردد.</p>",
      "tags": [
        "react.components.menu"
      ],
      "answers": [
        {
          "text": "<p>کد کوتاه‌تر می‌شود ولی مدیریت سخت‌تر</p>",
          "isCorrect": false
        },
        {
          "text": "<p>فقط برای استایل‌دهی استفاده می‌شود</p>",
          "isCorrect": false
        },
        {
          "text": "<p>صرفاً برای افزودن <code dir=\"ltr\">Event</code> <code dir=\"ltr\">Handler</code>ها است</p>",
          "isCorrect": false
        },
        {
          "text": "<p>منطق رندر هر آیتم جدا می‌شود و مدیریت زیرمنو ساده‌تر می‌شود</p>",
          "isCorrect": true
        }
      ]
    }
  ]
}
