{
  "questions": [
    {
      "text": "در منوی چندسطحی تعاملی که با useState پیاده‌سازی شده، متغیر state <code dir=\"ltr\">dropdown</code> چه نقشی دارد؟\n\nمثال:\n<pre><code dir=\"ltr\">const [dropdown, setDropdown] = useState(false);\n<button onClick={() => setDropdown(prev => !prev)}>{items.title}</button></code></pre>",
      "difficulty": 1,
      "explanation": "چرا گزینه B صحیح است؟ زیرا state <code>dropdown</code> تعیین می‌کند که زیرمنو نمایش داده شود یا مخفی باشد و با کلیک کاربر toggle می‌شود.",
      "tags": ["react.components.menu.dropdown"],
      "answers": [
        { "text": "مقدار URL آیتم منو را نگهداری می‌کند", "isCorrect": false },
        { "text": "تعیین می‌کند زیرمنو نمایش داده شود یا خیر", "isCorrect": true },
        { "text": "مقدار عنوان آیتم منو را ذخیره می‌کند", "isCorrect": false },
        { "text": "تعداد آیتم‌های زیرمنو را نگه می‌دارد", "isCorrect": false }
      ]
    },
    {
      "text": "در کامپوننت MenuItems، چرا برای آیتم‌های دارای زیرمنو از یک <code dir=\"ltr\">button</code> به جای <code dir=\"ltr\">a</code> استفاده شده است؟",
      "difficulty": 2,
      "explanation": "چرا گزینه A صحیح است؟ دکمه به جای لینک، امکان ثبت رویداد onClick برای باز/بسته کردن زیرمنو را فراهم می‌کند و به طور منطقی عملکرد toggle را انجام می‌دهد.",
      "tags": ["react.components.menu.dropdown"],
      "answers": [
        { "text": "برای ثبت رویداد onClick و toggle زیرمنو", "isCorrect": true },
        { "text": "برای هدایت به URL آیتم", "isCorrect": false },
        { "text": "برای استایل‌دهی ساده‌تر", "isCorrect": false },
        { "text": "هیچ تفاوتی با <a> ندارد", "isCorrect": false }
      ]
    },
    {
      "text": "در مثال زیر، چرا کلاس CSS <code dir=\"ltr\">show</code> به <code dir=\"ltr\">ul</code> اضافه می‌شود؟\n\n<pre><code dir=\"ltr\"><ul className={`dropdown ${dropdown ? 'show' : ''}`}>\n  {submenus.map((submenu, index) => (\n    <MenuItems items={submenu} key={index} />\n  ))}\n</code></pre>",
      "difficulty": 2,
      "explanation": "چرا گزینه C صحیح است؟ کلاس <code>show</code> باعث می‌شود که زیرمنو به صورت بصری نمایش داده شود و با تغییر state <code>dropdown</code> اضافه یا حذف می‌شود.",
      "tags": ["react.components.menu.dropdown"],
      "answers": [
        { "text": "برای تغییر متن لینک‌ها", "isCorrect": false },
        { "text": "برای اضافه کردن آیتم جدید به لیست", "isCorrect": false },
        { "text": "برای کنترل نمایش یا پنهان شدن زیرمنو با CSS", "isCorrect": true },
        { "text": "برای ثبت رویداد کلیک روی زیرمنو", "isCorrect": false }
      ]
    },
    {
      "text": "چه مزیتی در استفاده از state <code dir=\"ltr\">dropdown</code> در هر MenuItems وجود دارد نسبت به یک state سراسری برای تمام زیرمنوها؟",
      "difficulty": 3,
      "explanation": "چرا گزینه D صحیح است؟ داشتن state مجزا برای هر آیتم اجازه می‌دهد که زیرمنوها به صورت مستقل toggle شوند و رندر فقط برای آیتم تغییر یافته انجام شود.",
      "tags": ["react.components.menu.dropdown"],
      "answers": [
        { "text": "بهتر است چون کد کوتاه‌تر می‌شود ولی همه زیرمنوها همزمان باز می‌شوند", "isCorrect": false },
        { "text": "هیچ مزیتی ندارد، فقط پیچیدگی را اضافه می‌کند", "isCorrect": false },
        { "text": "برای استفاده از useReducer الزامی است", "isCorrect": false },
        { "text": "زیرمنوها به صورت مستقل toggle می‌شوند و رندر بهینه انجام می‌شود", "isCorrect": true }
      ]
    },
    {
      "text": "در Dropdown component، استفاده از map برای رندر زیرمنوها چه کاربردی دارد؟\n\n<pre><code dir=\"ltr\">{submenus.map((submenu, index) => (\n  <MenuItems items={submenu} key={index} />\n))}</code></pre>",
      "difficulty": 2,
      "explanation": "چرا گزینه B صحیح است؟ map برای پیمایش آرایه submenus و ایجاد یک MenuItems برای هر آیتم استفاده می‌شود و امکان رندر داینامیک زیرمنوها را فراهم می‌کند.",
      "tags": ["react.components.menu.dropdown"],
      "answers": [
        { "text": "برای اضافه کردن یک آیتم ثابت به منو", "isCorrect": false },
        { "text": "برای رندر داینامیک هر آیتم زیرمنو با key منحصر به فرد", "isCorrect": true },
        { "text": "برای تغییر CSS کلاس زیرمنو", "isCorrect": false },
        { "text": "برای ثبت رویداد کلیک روی دکمه", "isCorrect": false }
      ]
    }
  ]
}
