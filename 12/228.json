{
  "questions": [
    {
      "text": "<p>در تایمر، <code dir=\"lt\">state</code> <code>isActive</code> چه کاربردی دارد؟</p>",
      "difficulty": 1,
      "explanation": "<p>چرا گزینه <code dir=\"lt\">A</code> صحیح است؟ <code dir=\"lt\">state</code> <code>isActive</code> مشخص می‌کند که تایمر فعال است یا متوقف و با تغییر آن، <code dir=\"lt\">useEffect</code> اجرا شده و <code dir=\"lt\">setInterval</code> مدیریت می‌شود.</p>",
      "tags": [
        "react.project.timer.useEffect"
      ],
      "answers": [
        {
          "text": "<p>مشخص می‌کند که تایمر در حال اجراست یا متوقف</p>",
          "isCorrect": true
        },
        {
          "text": "<p>تعداد ثانیه‌های سپری شده را نگه می‌دارد</p>",
          "isCorrect": false
        },
        {
          "text": "<p>زمان را به فرمت دقیقه:ثانیه تبدیل می‌کند</p>",
          "isCorrect": false
        },
        {
          "text": "<p>فقط برای اتصال به دکمه‌ها استفاده می‌شود</p>",
          "isCorrect": false
        }
      ]
    },
    {
      "text": "<p>چرا در <code>setTime</code> از فرم تابعی <code>setTime(time => time + 1)</code> استفاده می‌کنیم؟</p>",
      "difficulty": 2,
      "explanation": "<p>چرا گزینه <code dir=\"lt\">A</code> صحیح است؟ فرم تابعی تضمین می‌کند که آخرین مقدار <code dir=\"lt\">state</code> استفاده شود و از <code dir=\"lt\">stale</code> <code dir=\"lt\">state</code> جلوگیری می‌کند.</p>",
      "tags": [
        "react.project.timer.useEffect"
      ],
      "answers": [
        {
          "text": "<p>برای کاهش تعداد رندرهای کامپوننت</p>",
          "isCorrect": false
        },
        {
          "text": "<p>برای جلوگیری از <code dir=\"lt\">stale</code> <code dir=\"lt\">state</code> و اطمینان از استفاده از آخرین مقدار <code dir=\"lt\">state</code></p>",
          "isCorrect": true
        },
        {
          "text": "<p>برای اتصال به دکمه ریست</p>",
          "isCorrect": false
        },
        {
          "text": "<p>فقط برای فرمت کردن زمان</p>",
          "isCorrect": false
        }
      ]
    },
    {
      "text": "<p>چه چیزی باعث جلوگیری از نشت حافظه در تایمر می‌شود؟</p>",
      "difficulty": 2,
      "explanation": "<p>چرا گزینه <code dir=\"lt\">B</code> صحیح است؟ بازگشت یک تابع پاک‌سازی در <code dir=\"lt\">useEffect</code> که <code dir=\"lt\">clearInterval</code> فراخوانی می‌کند، <code dir=\"lt\">interval</code> قدیمی را پاک می‌کند و از نشت حافظه جلوگیری می‌کند.</p>",
      "tags": [
        "react.project.timer.useEffect"
      ],
      "answers": [
        {
          "text": "<p>تعریف <code dir=\"lt\">state</code> با <code dir=\"lt\">useState</code></p>",
          "isCorrect": false
        },
        {
          "text": "<p>استفاده از تابع <code dir=\"lt\">handleStart</code></p>",
          "isCorrect": false
        },
        {
          "text": "<p>بازگشت یک تابع پاک‌سازی در <code dir=\"lt\">useEffect</code> که <code dir=\"lt\">clearInterval</code> را فراخوانی می‌کند</p>",
          "isCorrect": true
        },
        {
          "text": "<p>تبدیل زمان به فرمت دقیقه:ثانیه</p>",
          "isCorrect": false
        }
      ]
    },
    {
      "text": "<p>اگر <code>isActive</code> برابر <code dir=\"lt\">false</code> شود، چه اتفاقی برای <code dir=\"lt\">interval</code> رخ می‌دهد؟</p>",
      "difficulty": 3,
      "explanation": "<p>چرا گزینه <code dir=\"lt\">B</code> صحیح است؟ اگر تایمر غیرفعال شود، <code dir=\"lt\">interval</code> پاک شده و شمارش متوقف می‌گردد.</p>",
      "tags": [
        "react.project.timer.useEffect"
      ],
      "answers": [
        {
          "text": "<p><code dir=\"lt\">interval</code> فعال باقی می‌ماند و زمان همچنان افزایش می‌یابد</p>",
          "isCorrect": false
        },
        {
          "text": "<p><code dir=\"lt\">interval</code> پاک می‌شود و شمارش متوقف می‌گردد</p>",
          "isCorrect": true
        },
        {
          "text": "<p>تایمر <code dir=\"lt\">reset</code> می‌شود و زمان صفر می‌شود</p>",
          "isCorrect": false
        },
        {
          "text": "<p><code dir=\"lt\">useEffect</code> خطا می‌دهد و کامپوننت رندر نمی‌شود</p>",
          "isCorrect": false
        }
      ]
    },
    {
      "text": "<p>در تایمر، فرض کنید که در <code dir=\"lt\">useEffect</code> آرایه وابستگی <code>[isActive, time]</code> قرار داده شود و فرم تابع <code>setTime(time => time + 1)</code> نیز استفاده شود. چه رفتاری مشاهده می‌کنیم؟</p>",
      "difficulty": 3,
      "explanation": "<p>چرا گزینه <code dir=\"lt\">B</code> صحیح است؟ افزودن <code>time</code> به آرایه وابستگی باعث می‌شود که هر بار <code dir=\"lt\">state</code> <code>time</code> تغییر کند، <code dir=\"lt\">useEffect</code> دوباره اجرا شده و یک <code dir=\"lt\">interval</code> جدید ساخته شود. این منجر به چندین <code dir=\"lt\">interval</code> همزمان و افزایش غیرمنتظره زمان می‌شود. برای جلوگیری از این مشکل، کافی است تنها <code>isActive</code> را به آرایه وابستگی اضافه کنیم و از فرم تابع <code>setTime(time => time + 1)</code> استفاده شود.</p>",
      "tags": [
        "react.project.timer.useEffect"
      ],
      "answers": [
        {
          "text": "<p>تایمر به درستی کار می‌کند و شمارش با هر ثانیه افزایش می‌یابد</p>",
          "isCorrect": false
        },
        {
          "text": "<p>تایمر هیچ وقت شروع به کار نمی‌کند</p>",
          "isCorrect": false
        },
        {
          "text": "<p><code dir=\"lt\">setInterval</code> هر بار که <code dir=\"lt\">time</code> تغییر می‌کند دوباره ساخته شده و منجر به چندین <code dir=\"lt\">interval</code> همزمان می‌شود</p>",
          "isCorrect": true
        },
        {
          "text": "<p>خطا رخ می‌دهد و کامپوننت رندر نمی‌شود</p>",
          "isCorrect": false
        }
      ]
    }
  ]
}
