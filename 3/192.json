{
  "questions": [
    {
      "text": "<p>چرا یک کامپوننت <code dir=\"lt\">React</code> تنها می‌تواند یک عنصر ریشه (<code dir=\"lt\">root</code> <code dir=\"lt\">element</code>) را برگرداند؟</p>",
      "difficulty": 1,
      "explanation": "<p>چرا گزینه <code dir=\"lt\">C</code> صحیح است؟ در <code dir=\"lt\">JSX</code>، یک کامپوننت تنها می‌تواند یک عنصر ریشه بازگرداند. برای گروه‌بندی چندین عنصر، باید از یک تگ والد یا <code dir=\"lt\">Fragment</code> استفاده کرد.</p>",
      "tags": [
        "react.jsx.syntax"
      ],
      "answers": [
        {
          "text": "<p>چون چندین عنصر باعث کاهش سرعت می‌شوند</p>",
          "isCorrect": false
        },
        {
          "text": "<p>چون مرورگر اجازه رندر چند عنصر را نمی‌دهد</p>",
          "isCorrect": false
        },
        {
          "text": "<p>چون <code dir=\"lt\">JSX</code> نیاز به یک عنصر ریشه برای هر کامپوننت دارد</p>",
          "isCorrect": true
        },
        {
          "text": "<p>چون <code dir=\"lt\">React</code> تنها یک تگ <code dir=\"lt\">HTML</code> را می‌پذیرد</p>",
          "isCorrect": false
        }
      ]
    },
    {
      "text": "<p>چگونه می‌توان چندین عنصر را بدون ایجاد یک <code dir=\"lt\">div</code> اضافی در <code dir=\"lt\">DOM</code> گروه‌بندی کرد؟</p>",
      "difficulty": 2,
      "explanation": "<p>چرا گزینه <code dir=\"lt\">B</code> صحیح است؟ می‌توان از <code dir=\"lt\">React</code> <code dir=\"lt\">Fragment</code> با سینتکس خالی <> ... </> استفاده کرد تا عناصر را بدون اضافه کردن تگ اضافی به <code dir=\"lt\">DOM</code> گروه‌بندی کرد.</p>",
      "tags": [
        "react.jsx.syntax"
      ],
      "answers": [
        {
          "text": "<p>با استفاده از یک <code dir=\"lt\">div</code> اضافی</p>",
          "isCorrect": false
        },
        {
          "text": "<p>با استفاده از <code dir=\"lt\">React</code> <code dir=\"lt\">Fragment</code></p>",
          "isCorrect": true
        },
        {
          "text": "<p>با استفاده از تگ <code dir=\"lt\">span</code></p>",
          "isCorrect": false
        },
        {
          "text": "<p>با استفاده از تگ <code dir=\"lt\">section</code></p>",
          "isCorrect": false
        }
      ]
    },
    {
      "text": "<p>چه مشکلی ممکن است اگر در <code dir=\"lt\">JSX</code> تگ‌های <code dir=\"lt\">self-closing</code> مانند <img> یا <br> را نبندیم؟</p>",
      "difficulty": 3,
      "explanation": "<p>چرا گزینه <code dir=\"lt\">C</code> صحیح است؟ در <code dir=\"lt\">JSX</code> برخلاف <code dir=\"lt\">HTML</code>، همه تگ‌ها باید بسته شوند. تگ‌های <code dir=\"lt\">self-closing</code> باید با <code dir=\"lt\">/&gt;</code> بسته شوند و در غیر این صورت <code dir=\"lt\">React</code> خطا تولید می‌کند.</p>",
      "tags": [
        "react.jsx.syntax"
      ],
      "answers": [
        {
          "text": "<p><code dir=\"lt\">React</code> آن‌ها را خودکار اصلاح می‌کند</p>",
          "isCorrect": false
        },
        {
          "text": "<p>مرورگر نمایش را نادرست انجام می‌دهد</p>",
          "isCorrect": false
        },
        {
          "text": "<p><code dir=\"lt\">JSX</code> خطا تولید می‌کند و کامپایل نمی‌شود</p>",
          "isCorrect": true
        },
        {
          "text": "<p>هیچ مشکلی پیش نمی‌آید</p>",
          "isCorrect": false
        }
      ]
    },
    {
      "text": "<p>در <code dir=\"lt\">JSX</code>، چگونه باید کلاس <code dir=\"lt\">CSS</code> را به یک عنصر اختصاص دهیم؟</p>",
      "difficulty": 2,
      "explanation": "<p>چرا گزینه <code dir=\"lt\">B</code> صحیح است؟ در <code dir=\"lt\">JSX</code> به جای استفاده از <code dir=\"lt\">class</code> که کلمه رزرو شده جاوااسکریپت است، باید از <code dir=\"lt\">className</code> استفاده کرد.</p>",
      "tags": [
        "react.jsx.syntax"
      ],
      "answers": [
        {
          "text": "<p>با استفاده از <code dir=\"lt\">class</code></p>",
          "isCorrect": false
        },
        {
          "text": "<p>با استفاده از <code dir=\"lt\">className</code></p>",
          "isCorrect": true
        },
        {
          "text": "<p>با استفاده از <code dir=\"lt\">style</code></p>",
          "isCorrect": false
        },
        {
          "text": "<p>با استفاده از <code dir=\"lt\">id</code></p>",
          "isCorrect": false
        }
      ]
    },
    {
      "text": "<p>چگونه باید نام اتریبیوت‌های چندکلمه‌ای <code dir=\"lt\">HTML</code> (مانند <code dir=\"lt\">onclick</code>) را در <code dir=\"lt\">JSX</code> بنویسیم؟</p>",
      "difficulty": 2,
      "explanation": "<p>چرا گزینه <code dir=\"lt\">C</code> صحیح است؟ در <code dir=\"lt\">JSX</code>، اتریبیوت‌های <code dir=\"lt\">HTML</code> چندکلمه‌ای باید با <code dir=\"lt\">camelCase</code> نوشته شوند؛ برای مثال <code dir=\"lt\">htmlFor</code> به جای <code dir=\"lt\">for</code> و <code dir=\"lt\">onClick</code> به جای <code dir=\"lt\">onclick</code>.</p>",
      "tags": [
        "react.jsx.syntax"
      ],
      "answers": [
        {
          "text": "<p>به همان شکل <code dir=\"lt\">HTML</code></p>",
          "isCorrect": false
        },
        {
          "text": "<p>با فاصله بین کلمات</p>",
          "isCorrect": false
        },
        {
          "text": "<p>با <code dir=\"lt\">camelCase</code></p>",
          "isCorrect": true
        },
        {
          "text": "<p>با <code dir=\"lt\">underscore</code> بین کلمات</p>",
          "isCorrect": false
        }
      ]
    }
  ]
}
