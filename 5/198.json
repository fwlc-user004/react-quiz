{
  "questions": [
    {
      "text": "<p>چرا از <code dir=\"ltr\">useState</code> در کامپوننت‌های تابعی <code dir=\"ltr\">React</code> استفاده می‌کنیم؟</p>",
      "difficulty": 1,
      "explanation": "<p>چرا گزینه <code dir=\"ltr\">B</code> صحیح است؟ <code dir=\"ltr\">useState</code> به کامپوننت‌های تابعی اجازه می‌دهد تا حافظه داخلی (<code dir=\"ltr\">state</code>) داشته باشند و در پاسخ به تعاملات کاربر، <code dir=\"ltr\">UI</code> را پویا و تعاملی نگه دارند.</p>",
      "tags": [
        "react.hooks.useState"
      ],
      "answers": [
        {
          "text": "<p>برای وارد کردن <code dir=\"ltr\">props</code> به کامپوننت</p>",
          "isCorrect": false
        },
        {
          "text": "<p>برای افزودن حافظه داخلی (<code dir=\"ltr\">state</code>) به کامپوننت‌های تابعی</p>",
          "isCorrect": true
        },
        {
          "text": "<p>برای استفاده از <code dir=\"ltr\">lifecycle</code> <code dir=\"ltr\">methods</code> کلاس‌ها</p>",
          "isCorrect": false
        },
        {
          "text": "<p>برای تعریف متغیرهای ثابت داخل <code dir=\"ltr\">JSX</code></p>",
          "isCorrect": false
        }
      ]
    },
    {
      "text": "<p>در سینتکس <code dir=\"ltr\">const</code> [<code dir=\"ltr\">count</code>, <code dir=\"ltr\">setCount</code>] = <code dir=\"ltr\">useState</code>(<code dir=\"ltr\">0</code>)، نقش <code dir=\"ltr\">count</code> و <code dir=\"ltr\">setCount</code> چیست؟</p>",
      "difficulty": 2,
      "explanation": "<p>چرا گزینه <code dir=\"ltr\">C</code> صحیح است؟ <code dir=\"ltr\">count</code> مقدار فعلی <code dir=\"ltr\">state</code> است و <code dir=\"ltr\">setCount</code> تابعی برای به‌روزرسانی آن مقدار است که باعث رندر مجدد کامپوننت می‌شود.</p>",
      "tags": [
        "react.hooks.useState"
      ],
      "answers": [
        {
          "text": "<p><code dir=\"ltr\">count</code> تابعی برای تغییر مقدار و <code dir=\"ltr\">setCount</code> مقدار فعلی است</p>",
          "isCorrect": false
        },
        {
          "text": "<p>هر دو متغیر <code dir=\"ltr\">state</code> هستند</p>",
          "isCorrect": false
        },
        {
          "text": "<p><code dir=\"ltr\">count</code> مقدار فعلی <code dir=\"ltr\">state</code> و <code dir=\"ltr\">setCount</code> تابع به‌روزرسانی آن است</p>",
          "isCorrect": true
        },
        {
          "text": "<p><code dir=\"ltr\">count</code> متغیر محلی و <code dir=\"ltr\">setCount</code> یک <code dir=\"ltr\">prop</code> است</p>",
          "isCorrect": false
        }
      ]
    },
    {
      "text": "<p>چرا استفاده از <code dir=\"ltr\">destructuring</code> آرایه با <code dir=\"ltr\">useState</code> توصیه می‌شود؟</p>",
      "difficulty": 2,
      "explanation": "<p>چرا گزینه <code dir=\"ltr\">B</code> صحیح است؟ <code dir=\"ltr\">destructuring</code> به ما امکان می‌دهد که به صورت خواناتر و مستقیم به مقدار <code dir=\"ltr\">state</code> و تابع <code dir=\"ltr\">setter</code> دسترسی داشته باشیم و کد تمیزتر شود.</p>",
      "tags": [
        "react.hooks.useState"
      ],
      "answers": [
        {
          "text": "<p>برای جلوگیری از ایجاد <code dir=\"ltr\">state</code> جدید</p>",
          "isCorrect": false
        },
        {
          "text": "<p>برای دسترسی خواناتر به <code dir=\"ltr\">state</code> و تابع <code dir=\"ltr\">setter</code></p>",
          "isCorrect": true
        },
        {
          "text": "<p>برای افزایش سرعت رندر کامپوننت</p>",
          "isCorrect": false
        },
        {
          "text": "<p>برای جایگزینی <code dir=\"ltr\">props</code> در کامپوننت</p>",
          "isCorrect": false
        }
      ]
    },
    {
      "text": "<p>چه چیزی باعث می‌شود که فراخوانی <code dir=\"ltr\">setCount</code> باعث رندر مجدد کامپوننت شود؟</p>",
      "difficulty": 3,
      "explanation": "<p>چرا گزینه <code dir=\"ltr\">C</code> صحیح است؟ فراخوانی تابع <code dir=\"ltr\">setter</code> که توسط <code dir=\"ltr\">useState</code> برگردانده می‌شود، <code dir=\"ltr\">React</code> را مطلع می‌کند که <code dir=\"ltr\">state</code> تغییر کرده و کامپوننت باید دوباره رندر شود.</p>",
      "tags": [
        "react.hooks.useState"
      ],
      "answers": [
        {
          "text": "<p>تغییر <code dir=\"ltr\">props</code> کامپوننت</p>",
          "isCorrect": false
        },
        {
          "text": "<p>استفاده از <code dir=\"ltr\">lifecycle</code> <code dir=\"ltr\">methods</code> کلاس‌ها</p>",
          "isCorrect": false
        },
        {
          "text": "<p>فراخوانی تابع <code dir=\"ltr\">setter</code> بازگردانده شده توسط <code dir=\"ltr\">useState</code></p>",
          "isCorrect": true
        },
        {
          "text": "<p>تغییر مقدار متغیر محلی داخل <code dir=\"ltr\">JSX</code></p>",
          "isCorrect": false
        }
      ]
    },
    {
      "text": "<p>کدام یک از قوانین استفاده از هوک‌ها باید همیشه رعایت شود؟</p>",
      "difficulty": 2,
      "explanation": "<p>چرا گزینه <code dir=\"ltr\">B</code> صحیح است؟ هوک‌ها باید فقط در سطح بالای کامپوننت‌های تابعی فراخوانی شوند و نباید داخل حلقه‌ها، شرط‌ها یا توابع تو در تو استفاده شوند.</p>",
      "tags": [
        "react.hooks.useState"
      ],
      "answers": [
        {
          "text": "<p>می‌توان آنها را در هر تابع جاوااسکریپت فراخوانی کرد</p>",
          "isCorrect": false
        },
        {
          "text": "<p>فقط در سطح بالای کامپوننت‌های تابعی فراخوانی شوند</p>",
          "isCorrect": true
        },
        {
          "text": "<p>می‌توان آنها را در حلقه‌ها و شرط‌ها فراخوانی کرد</p>",
          "isCorrect": false
        },
        {
          "text": "<p>استفاده از آنها نیاز به کلاس‌های <code dir=\"ltr\">ES6</code> دارد</p>",
          "isCorrect": false
        }
      ]
    }
  ]
}
