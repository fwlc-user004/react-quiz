{
  "questions": [
    {
      "text": "<p><code dir=\"lt\">useEffect</code> در <code dir=\"lt\">React</code> چه کاربردی دارد؟</p>",
      "difficulty": 1,
      "explanation": "<p>چرا گزینه <code dir=\"lt\">B</code> صحیح است؟ <code dir=\"lt\">useEffect</code> به ما اجازه می‌دهد کدهایی که با دنیای خارج از <code dir=\"lt\">React</code> تعامل دارند (مانند <code dir=\"lt\">DOM</code> یا <code dir=\"lt\">API</code>ها) را بعد از رندر کامپوننت اجرا کنیم، بدون اینکه رندر اصلی مسدود شود.</p>",
      "tags": [
        "react.hooks.useEffect"
      ],
      "answers": [
        {
          "text": "<p>برای ایجاد <code dir=\"lt\">state</code> جدید در کامپوننت</p>",
          "isCorrect": false
        },
        {
          "text": "<p>برای مدیریت عوارض جانبی و اجرای کد پس از رندر</p>",
          "isCorrect": true
        },
        {
          "text": "<p>برای تعریف <code dir=\"lt\">props</code> کامپوننت</p>",
          "isCorrect": false
        },
        {
          "text": "<p>برای بهینه‌سازی <code dir=\"lt\">CSS</code></p>",
          "isCorrect": false
        }
      ]
    },
    {
      "text": "<p>چه چیزی باعث می‌شود <code dir=\"lt\">useEffect</code> بعد از هر رندر اجرا شود؟</p>",
      "difficulty": 2,
      "explanation": "<p>چرا گزینه <code dir=\"lt\">C</code> صحیح است؟ اگر آرایه وابستگی‌ها ارائه نشود، <code dir=\"lt\">useEffect</code> بعد از هر بار رندر اجرا می‌شود، چه رندر اولیه و چه رندرهای مجدد ناشی از تغییر <code dir=\"lt\">state</code>.</p>",
      "tags": [
        "react.hooks.useEffect"
      ],
      "answers": [
        {
          "text": "<p>وجود آرایه خالی به عنوان وابستگی</p>",
          "isCorrect": false
        },
        {
          "text": "<p>تعریف <code dir=\"lt\">state</code> در <code dir=\"lt\">useEffect</code></p>",
          "isCorrect": false
        },
        {
          "text": "<p>عدم ارائه آرایه وابستگی</p>",
          "isCorrect": true
        },
        {
          "text": "<p>استفاده از تابع <code dir=\"lt\">setter</code></p>",
          "isCorrect": false
        }
      ]
    },
    {
      "text": "<p>در این مثال، چه عملی یک «عوارض جانبی» محسوب می‌شود؟</p>\n<pre><code dir=\"lt\">useEffect(() => {\n  document.title = `You clicked ${count} times`;\n});</code></pre>",
      "difficulty": 2,
      "explanation": "<p>چرا گزینه <code dir=\"lt\">B</code> صحیح است؟ تغییر <code dir=\"lt\">document</code>.<code dir=\"lt\">title</code> عملی است که خارج از دنیای <code dir=\"lt\">React</code> رخ می‌دهد و به <code dir=\"lt\">DOM</code> مرورگر وابسته است، بنابراین یک عارضه جانبی است.</p>",
      "tags": [
        "react.hooks.useEffect"
      ],
      "answers": [
        {
          "text": "<p>فراخوانی <code dir=\"lt\">setCount</code></p>",
          "isCorrect": false
        },
        {
          "text": "<p>تغییر <code dir=\"lt\">document</code>.<code dir=\"lt\">title</code></p>",
          "isCorrect": true
        },
        {
          "text": "<p>بازگشت <code dir=\"lt\">JSX</code></p>",
          "isCorrect": false
        },
        {
          "text": "<p>تعریف متغیر <code dir=\"lt\">count</code></p>",
          "isCorrect": false
        }
      ]
    },
    {
      "text": "<p>چرا باید تابع <code dir=\"lt\">useEffect</code> در سطح بالای کامپوننت فراخوانی شود؟</p>",
      "difficulty": 2,
      "explanation": "<p>چرا گزینه <code dir=\"lt\">C</code> صحیح است؟ فراخوانی <code dir=\"lt\">useEffect</code> در سطح بالا باعث می‌شود ترتیب اجرای افکت‌ها ثابت بماند و <code dir=\"lt\">React</code> بتواند آنها را به درستی مدیریت کند، مشابه قوانین سایر هوک‌ها.</p>",
      "tags": [
        "react.hooks.useEffect"
      ],
      "answers": [
        {
          "text": "<p>چون <code dir=\"lt\">useEffect</code> تنها یک بار اجرا می‌شود</p>",
          "isCorrect": false
        },
        {
          "text": "<p>چون داخل حلقه یا شرط مجاز است</p>",
          "isCorrect": false
        },
        {
          "text": "<p>چون <code dir=\"lt\">React</code> نیاز دارد ترتیب اجرای افکت‌ها ثابت باشد</p>",
          "isCorrect": true
        },
        {
          "text": "<p>چون در خارج از کامپوننت اجرا نمی‌شود</p>",
          "isCorrect": false
        }
      ]
    },
    {
      "text": "<p>چه تفاوتی بین اجرای افکت در <code dir=\"lt\">useEffect</code> و اجرای مستقیم کد در بدنه کامپوننت وجود دارد؟</p>",
      "difficulty": 2,
      "explanation": "<p>چرا گزینه <code dir=\"lt\">A</code> صحیح است؟ کدهای داخل <code dir=\"lt\">useEffect</code> بعد از اعمال تغییرات در <code dir=\"lt\">DOM</code> اجرا می‌شوند و رندر اصلی را مسدود نمی‌کنند، در حالی که کد داخل بدنه کامپوننت در زمان رندر اجرا می‌شود.</p>",
      "tags": [
        "react.hooks.useEffect"
      ],
      "answers": [
        {
          "text": "<p><code dir=\"lt\">useEffect</code> بعد از رندر اجرا می‌شود</p>",
          "isCorrect": true
        },
        {
          "text": "<p>بدنه کامپوننت بعد از رندر اجرا می‌شود</p>",
          "isCorrect": false
        },
        {
          "text": "<p><code dir=\"lt\">useEffect</code> برای تعریف <code dir=\"lt\">state</code> است</p>",
          "isCorrect": false
        },
        {
          "text": "<p>هیچ تفاوتی وجود ندارد</p>",
          "isCorrect": false
        }
      ]
    },
    {
      "text": "<p>کدام مثال باعث اجرای غیرضروری <code dir=\"lt\">useEffect</code> می‌شود؟</p>",
      "difficulty": 3,
      "explanation": "<p>چرا گزینه <code dir=\"lt\">A</code> صحیح است؟ اگر آرایه وابستگی‌ها ارائه نشود، افکت بعد از هر رندر اجرا می‌شود حتی اگر نیاز نباشد و باعث اجرای غیرضروری می‌شود.</p>",
      "tags": [
        "react.hooks.useEffect"
      ],
      "answers": [
        {
          "text": "<p><code dir=\"lt\">useEffect(() => { console.log(count); }, [count]);</code></p>",
          "isCorrect": false
        },
        {
          "text": "<p><code dir=\"lt\">useEffect(() => { console.log(count); });</code></p>",
          "isCorrect": true
        },
        {
          "text": "<p><code dir=\"lt\">useEffect(() => { console.log(count); }, []);</code></p>",
          "isCorrect": false
        },
        {
          "text": "<p><code dir=\"lt\">useEffect(() => { console.log('hello'); }, []);</code></p>",
          "isCorrect": false
        }
      ]
    }
  ]
}
