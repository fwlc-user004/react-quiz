{
  "questions": [
    {
      "text": "<p>آرایه وابستگی‌ها (<code dir=\"ltr\">Dependency</code> <code dir=\"ltr\">Array</code>) در <code dir=\"ltr\">useEffect</code> چه کاربردی دارد؟</p>",
      "difficulty": 2,
      "explanation": "<p>چرا گزینه <code dir=\"ltr\">B</code> صحیح است؟ آرایه وابستگی‌ها به <code dir=\"ltr\">React</code> می‌گوید که افکت به کدام مقادیر وابسته است و تنها زمانی که این مقادیر تغییر کنند، افکت دوباره اجرا می‌شود، در نتیجه از اجرای غیرضروری جلوگیری می‌کند.</p>",
      "tags": [
        "react.hooks.useEffect"
      ],
      "answers": [
        {
          "text": "<p>برای تعریف <code dir=\"ltr\">state</code> جدید</p>",
          "isCorrect": false
        },
        {
          "text": "<p>برای کنترل اینکه افکت چه زمانی اجرا شود</p>",
          "isCorrect": true
        },
        {
          "text": "<p>برای اجرای افکت قبل از رندر</p>",
          "isCorrect": false
        },
        {
          "text": "<p>برای مدیریت <code dir=\"ltr\">props</code></p>",
          "isCorrect": false
        }
      ]
    },
    {
      "text": "<p>اگر آرایه وابستگی‌ها خالی باشد، <code dir=\"ltr\">useEffect</code> چه رفتاری دارد؟</p>",
      "difficulty": 2,
      "explanation": "<p>چرا گزینه <code dir=\"ltr\">A</code> صحیح است؟ اگر آرایه وابستگی‌ها خالی باشد، افکت تنها یک بار پس از رندر اولیه اجرا می‌شود، مشابه <code dir=\"ltr\">componentDidMount</code> در کامپوننت‌های کلاس‌محور.</p>",
      "tags": [
        "react.hooks.useEffect"
      ],
      "answers": [
        {
          "text": "<p>افکت تنها یک بار پس از رندر اولیه اجرا می‌شود</p>",
          "isCorrect": true
        },
        {
          "text": "<p>افکت بعد از هر رندر اجرا می‌شود</p>",
          "isCorrect": false
        },
        {
          "text": "<p>افکت اجرا نمی‌شود</p>",
          "isCorrect": false
        },
        {
          "text": "<p>افکت به صورت همزمان با رندر اجرا می‌شود</p>",
          "isCorrect": false
        }
      ]
    },
    {
      "text": "<p>در این مثال، <code dir=\"ltr\">useEffect</code> چه زمانی دوباره اجرا می‌شود؟</p>\n<pre><code dir=\"ltr\">useEffect(() => {\n  console.log(`Fetching data for user: ${userId}`);\n}, [userId]);</code></pre>",
      "difficulty": 3,
      "explanation": "<p>چرا گزینه <code dir=\"ltr\">B</code> صحیح است؟ افکت تنها زمانی دوباره اجرا می‌شود که مقدار <code dir=\"ltr\">userId</code> تغییر کند، نه در رندرهای غیرمرتبط دیگر.</p>",
      "tags": [
        "react.hooks.useEffect"
      ],
      "answers": [
        {
          "text": "<p>بعد از هر رندر کامپوننت</p>",
          "isCorrect": false
        },
        {
          "text": "<p>تنها زمانی که <code dir=\"ltr\">userId</code> تغییر کند</p>",
          "isCorrect": true
        },
        {
          "text": "<p>هر زمان که <code dir=\"ltr\">state</code> دیگری تغییر کند</p>",
          "isCorrect": false
        },
        {
          "text": "<p>هرگز اجرا نمی‌شود</p>",
          "isCorrect": false
        }
      ]
    },
    {
      "text": "<p>چرا باید تمام <code dir=\"ltr\">props</code> و <code dir=\"ltr\">state</code> مورد استفاده در افکت را در آرایه وابستگی‌ها قرار دهیم؟</p>",
      "difficulty": 3,
      "explanation": "<p>چرا گزینه <code dir=\"ltr\">C</code> صحیح است؟ این کار تضمین می‌کند که افکت فقط در زمانی که مقادیر واقعی که استفاده می‌کنیم تغییر کرده‌اند، اجرا شود و از باگ‌ها و اجرای غیرضروری جلوگیری می‌کند.</p>",
      "tags": [
        "react.hooks.useEffect"
      ],
      "answers": [
        {
          "text": "<p>برای صرفه‌جویی در حافظه</p>",
          "isCorrect": false
        },
        {
          "text": "<p>برای اجرای افکت قبل از رندر</p>",
          "isCorrect": false
        },
        {
          "text": "<p>برای جلوگیری از اجرای غیرضروری و حفظ رفتار پیش‌بینی‌پذیر</p>",
          "isCorrect": true
        },
        {
          "text": "<p>برای هماهنگ کردن <code dir=\"ltr\">useState</code> و <code dir=\"ltr\">props</code></p>",
          "isCorrect": false
        }
      ]
    },
    {
      "text": "<p>اگر بخواهیم داده‌ها از یک <code dir=\"ltr\">API</code> فقط یک بار دریافت شوند، چه آرایه وابستگی‌ای باید استفاده کنیم؟</p>\n<pre><code dir=\"ltr\">useEffect(() => {\n  fetchData();\n}, ...);</code></pre>",
      "difficulty": 2,
      "explanation": "<p>چرا گزینه <code dir=\"ltr\">D</code> صحیح است؟ آرایه خالی [] باعث می‌شود افکت تنها یک بار پس از رندر اولیه اجرا شود و دوباره اجرا نشود.</p>",
      "tags": [
        "react.hooks.useEffect"
      ],
      "answers": [
        {
          "text": "<p>[<code dir=\"ltr\">fetchData</code>]</p>",
          "isCorrect": false
        },
        {
          "text": "<p>[<code dir=\"ltr\">userId</code>]</p>",
          "isCorrect": false
        },
        {
          "text": "<p>[<code dir=\"ltr\">state</code>]</p>",
          "isCorrect": false
        },
        {
          "text": "<p>[]</p>",
          "isCorrect": true
        }
      ]
    },
    {
      "text": "<p>چگونه <code dir=\"ltr\">useEffect</code> از ایجاد حلقه بی‌نهایت در فراخوانی <code dir=\"ltr\">API</code> جلوگیری می‌کند؟</p>",
      "difficulty": 3,
      "explanation": "<p>چرا گزینه <code dir=\"ltr\">A</code> صحیح است؟ با مشخص کردن مقادیر وابستگی، <code dir=\"ltr\">React</code> افکت را تنها زمانی اجرا می‌کند که این مقادیر تغییر کنند و از اجرای مکرر غیرضروری جلوگیری می‌شود، در نتیجه حلقه بی‌نهایت رخ نمی‌دهد.</p>",
      "tags": [
        "react.hooks.useEffect"
      ],
      "answers": [
        {
          "text": "<p>با اجرای افکت تنها زمانی که مقادیر وابسته تغییر کنند</p>",
          "isCorrect": true
        },
        {
          "text": "<p>با توقف رندر مجدد کامپوننت</p>",
          "isCorrect": false
        },
        {
          "text": "<p>با تغییر <code dir=\"ltr\">state</code> به صورت مستقیم</p>",
          "isCorrect": false
        },
        {
          "text": "<p>با استفاده از <code dir=\"ltr\">setTimeout</code> برای تاخیر</p>",
          "isCorrect": false
        }
      ]
    }
  ]
}
