{
  "questions": [
    {
      "text": "چرا هوک‌ها باید همیشه در سطح بالای کامپوننت فراخوانی شوند و نباید داخل شرط یا حلقه قرار گیرند؟",
      "difficulty": 1,
      "explanation": "چرا گزینه B صحیح است؟ زیرا React برای ردیابی state هر هوک، به ترتیب فراخوانی آنها متکی است. اگر ترتیب فراخوانی در رندرهای مختلف تغییر کند، React نمی‌تواند state صحیح را اختصاص دهد و باگ رخ می‌دهد.",
      "tags": ["react.hooks.rules"],
      "answers": [
        { "text": "چون فراخوانی در حلقه‌ها باعث کند شدن کامپوننت می‌شود", "isCorrect": false },
        { "text": "چون ترتیب فراخوانی هوک‌ها باید ثابت باشد تا React بتواند state مربوطه را مدیریت کند", "isCorrect": true },
        { "text": "چون هوک‌ها تنها در ابتدای فایل قابل استفاده هستند", "isCorrect": false },
        { "text": "چون شرط‌ها و حلقه‌ها با JSX سازگار نیستند", "isCorrect": false }
      ]
    },
    {
      "text": "هوک‌ها را از کجا می‌توان فراخوانی کرد؟",
      "difficulty": 1,
      "explanation": "چرا گزینه C صحیح است؟ هوک‌ها تنها از داخل کامپوننت‌های تابعی React یا از داخل هوک‌های سفارشی دیگر قابل فراخوانی هستند. فراخوانی در توابع معمولی جاوااسکریپت باعث خطا می‌شود.",
      "tags": ["react.hooks.rules"],
      "answers": [
        { "text": "از هر تابع جاوااسکریپت", "isCorrect": false },
        { "text": "فقط در داخل کلاس‌های جاوااسکریپت", "isCorrect": false },
        { "text": "از داخل کامپوننت‌های تابعی React یا هوک‌های سفارشی دیگر", "isCorrect": true },
        { "text": "فقط در فایل index.js", "isCorrect": false }
      ]
    },
    {
      "text": "در کد زیر چه خطایی رخ می‌دهد و چرا؟<code dir=\"ltr\">\nfunction logState() {\n  const [value, setValue] = useState('');\n  console.log(value);\n}</code>",
      "difficulty": 3,
      "explanation": "چرا گزینه A صحیح است؟ هوک useState نمی‌تواند در یک تابع معمولی جاوااسکریپت فراخوانی شود. React انتظار دارد هوک‌ها از داخل کامپوننت‌های تابعی یا هوک‌های سفارشی فراخوانی شوند. این کد منجر به خطا می‌شود.",
      "tags": ["react.hooks.rules"],
      "answers": [
        { "text": "React خطا می‌دهد زیرا useState در تابع معمولی جاوااسکریپت استفاده شده است", "isCorrect": true },
        { "text": "کد بدون مشکل اجرا می‌شود اما state به روز نمی‌شود", "isCorrect": false },
        { "text": "فقط console.log اجرا می‌شود ولی state اختصاص داده نمی‌شود", "isCorrect": false },
        { "text": "useState به صورت خودکار state را مدیریت می‌کند", "isCorrect": false }
      ]
    },
    {
      "text": "اگر هوک useEffect را داخل یک شرط فراخوانی کنیم، چه اتفاقی می‌افتد؟",
      "difficulty": 2,
      "explanation": "چرا گزینه C صحیح است؟ فراخوانی هوک‌ها داخل شرط ترتیب ثابت فراخوانی آنها را به هم می‌زند. React نمی‌تواند state و افکت‌ها را به درستی مدیریت کند و ممکن است باگ رخ دهد.",
      "tags": ["react.hooks.rules"],
      "answers": [
        { "text": "هوک فقط در اولین بار اجرا می‌شود", "isCorrect": false },
        { "text": "React این رفتار را نادیده می‌گیرد", "isCorrect": false },
        { "text": "ترتیب فراخوانی هوک‌ها به هم می‌خورد و React نمی‌تواند state را درست اختصاص دهد", "isCorrect": true },
        { "text": "کد به صورت نرمال اجرا می‌شود ولی افکت اجرا نمی‌شود", "isCorrect": false }
      ]
    },
    {
      "text": "چرا رعایت قوانین هوک‌ها برای توسعه‌دهندگان اهمیت دارد؟",
      "difficulty": 2,
      "explanation": "چرا گزینه B صحیح است؟ رعایت قوانین هوک‌ها باعث می‌شود React بتواند state و افکت‌ها را به درستی مدیریت کند، از بروز باگ‌های پیچیده جلوگیری شود و کد قابل پیش‌بینی و پایدار باشد.",
      "tags": ["react.hooks.rules"],
      "answers": [
        { "text": "زیرا باعث سریع‌تر شدن اجرای جاوااسکریپت می‌شود", "isCorrect": false },
        { "text": "چون مدیریت درست state و افکت‌ها بدون آن غیرممکن است و باگ‌های پیچیده رخ می‌دهد", "isCorrect": true },
        { "text": "زیرا JSX تنها در این شرایط معتبر است", "isCorrect": false },
        { "text": "زیرا ESLint بدون این قوانین کار نمی‌کند", "isCorrect": false }
      ]
    }
  ]
}
